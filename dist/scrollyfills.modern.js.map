{"version":3,"file":"scrollyfills.modern.js","sources":["../src/scrollend.js"],"sourcesContent":["const supported = typeof window == 'undefined' ? true : \"onscrollend\" in window;\n\nif (!supported) {\n  const scrollendEvent = new Event('scrollend');\n  const pointers = new Set();\n\n  // Track if any pointer is active\n  document.addEventListener('touchstart', e => {\n    for (let touch of e.changedTouches) \n      pointers.add(touch.identifier)\n  }, {passive: true});\n\n  document.addEventListener('touchend', e => {\n    for (let touch of e.changedTouches)\n      pointers.delete(touch.identifier)\n  }, {passive: true});\n\n  document.addEventListener('touchcancel', e => {\n    for (let touch of e.changedTouches)\n      pointers.delete(touch.identifier)\n  }, {passive: true});\n\n  // Map of scroll-observed elements.\n  let observed = new WeakMap();\n\n  // Forward and observe calls to a native method.\n  function observe(proto, method, handler) {\n    let native = proto[method];\n    proto[method] = function() {\n      let args = Array.prototype.slice.apply(arguments, [0]);\n      native.apply(this, args);\n      args.unshift(native);\n      handler.apply(this, args);\n    }\n  }\n  \n  function onAddListener(originalFn, type, handler, options) {\n    // Polyfill scrollend event on any element for which the developer listens\n    // to 'scrollend' explicitly or 'scroll' (so that adding a scrollend listener\n    // from within a scroll listener works).\n    if (type != 'scroll' && type != 'scrollend')\n      return;\n\n    let scrollport = this;\n    let data = observed.get(scrollport);\n    if (data === undefined) {\n      let timeout = 0;\n      data = {\n        scrollListener: (evt) => {\n          clearTimeout(timeout);\n          timeout = setTimeout(() => {\n            if (pointers.size) {\n              // if pointer(s) are down, wait longer\n              setTimeout(data.scrollListener, 100)\n            }\n            else {\n              // dispatch\n              if (scrollport) {\n                scrollport.dispatchEvent(scrollendEvent);\n              }\n              timeout = 0;\n            }\n          }, 100);\n        },\n        listeners: 0, // Count of number of listeners.\n      };\n      originalFn.apply(scrollport, ['scroll', data.scrollListener]);\n      observed.set(scrollport, data);\n    }\n    data.listeners++;\n  }\n\n  function onRemoveListener(originalFn, type, handler) {\n    if (type != 'scroll' && type != 'scrollend')\n      return;\n    let scrollport = this;\n    let data = observed.get(scrollport);\n\n    // Mismatched addEventListener / removeEventListener\n    // TODO: Should we explicitly track added listeners to prevent this?\n    if (data === undefined)\n      return;\n\n    // If there are still listeners, nothing more to do.\n    if (--data.listeners > 0)\n      return;\n\n    // Otherwise, remove the added listeners.\n    originalFn.apply(scrollport, ['scroll', data.scrollListener]);\n    observed.delete(scrollport);\n  }\n\n  observe(Element.prototype, 'addEventListener', onAddListener);\n  observe(window, 'addEventListener', onAddListener);\n  observe(document, 'addEventListener', onAddListener);\n  observe(Element.prototype, 'removeEventListener', onRemoveListener);\n  observe(window, 'removeEventListener', onRemoveListener);\n  observe(document, 'removeEventListener', onRemoveListener);\n  // TODO: Polyfill onscroll, onscrollend as well?\n}\n"],"names":["window","scrollendEvent","Event","Set","document","addEventListener","e","touch","changedTouches","pointers","add","identifier","passive","delete","observed","WeakMap","observe","proto","method","handler","native","args","Array","prototype","slice","apply","arguments","this","unshift","onAddListener","originalFn","type","options","scrollport","data","get","undefined","scrollListener","evt","clearTimeout","timeout","setTimeout","size","dispatchEvent","listeners","set","onRemoveListener","Element"],"mappings":"AAEA,GAFmC,oBAAjBA,UAAsC,gBAAxDA,QAEgB,CACd,MAAMC,EAAiB,IAAAC,MAAU,eAChB,IAAjBC,IAGAC,SAASC,iBAAiB,aAAcC,IACtC,IAAK,IAALC,KAAmBD,EAACE,eAClBC,EAASC,IAAIH,EAAMI,aACpB,CAACC,SAAS,IAEbR,SAASC,iBAAiB,WAAYC,IACpC,IAAK,IAALC,KAAmBD,EAACE,eAClBC,EAASI,OAAON,EAAMI,aACvB,CAACC,SAAS,IAEbR,SAASC,iBAAiB,cAAeC,IACvC,IAAK,IAAIC,KAASD,EAAEE,eAClBC,EAASI,OAAON,EAAMI,aACvB,CAACC,SAAS,IAGb,IAAIE,EAAW,IAAfC,QAGA,SAASC,EAAQC,EAAOC,EAAQC,GAC9B,IAAUC,EAAGH,EAAMC,GACnBD,EAAMC,GAAU,WACd,IAAQG,EAAGC,MAAMC,UAAUC,MAAMC,MAAMC,UAAW,CAAC,IACnDN,EAAOK,MAAME,KAAMN,GACnBA,EAAKO,QAAQR,GACbD,EAAQM,MAAME,KAAMN,IAIxB,SAAAQ,EAAuBC,EAAYC,EAAMZ,EAASa,GAIhD,GAAY,UAARD,GAA4B,aAARA,EACtB,OAEF,IAAIE,EAAaN,KACTO,EAAGpB,EAASqB,IAAIF,GACxB,QAAaG,IAATF,EAAoB,CACtB,MAAc,EACdA,EAAO,CACLG,eAAiBC,IACfC,aAAaC,GACbA,EAAUC,WAAW,KACfhC,EAASiC,KAEXD,WAAWP,EAAKG,eAAgB,MAI5BJ,GACFA,EAAWU,cAAc1C,GAE3BuC,EAAU,IAEX,MAELI,UAAW,GAEbd,EAAWL,MAAMQ,EAAY,CAAC,SAAUC,EAAKG,iBAC7CvB,EAAS+B,IAAIZ,EAAYC,GAE3BA,EAAKU,YAGP,SAASE,EAAiBhB,EAAYC,EAAMZ,GAC1C,GAAY,UAARY,GAA4B,aAARA,EACtB,OACF,IAAIE,EAAaN,KACbO,EAAOpB,EAASqB,IAAIF,QAIXG,IAATF,MAIEA,EAAKU,UAAY,IAIvBd,EAAWL,MAAMQ,EAAY,CAAC,SAAUC,EAAKG,iBAC7CvB,EAASD,OAAOoB,KAGlBjB,EAAQ+B,QAAQxB,UAAW,mBAAoBM,GAC/Cb,EAAQhB,OAAQ,mBAAoB6B,GACpCb,EAAQZ,SAAU,mBAAoByB,GACtCb,EAAQ+B,QAAQxB,UAAW,sBAAuBuB,GAClD9B,EAAQhB,OAAQ,sBAAuB8C,GACvC9B,EAAQZ,SAAU,sBAAuB0C"}